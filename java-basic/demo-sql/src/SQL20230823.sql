-- 23 AUG
DROP TABLE CUSTOMERS;
CREATE TABLE CUSTOMERS (
	ID INTEGER NOT NULL,
    NAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50),
    VIP VARCHAR(1) NOT NULL
    -- ORDER_ID INTEGER NOT NULL -- OPTION 2
);

-- ONE TO MANY (ONE CUSTOMER MAY HAVE MANY ORDERS)
CREATE TABLE ORDERS (
	ID INTEGER NOT NULL,
    AMOUNT NUMERIC(9,2) NOT NULL,
    CUSTOMER_ID INTEGER NOT NULL -- OPTION 1
);

DROP TABLE ITEMS;
CREATE TABLE ITEMS (
	ID INTEGER NOT NULL,
    AMOUNT NUMERIC(9,2) NOT NULL,
    DESCRIPTION VARCHAR(100) NOT NULL,
    ORDER_ID INTEGER NOT NULL
);

DELETE FROM CUSTOMERS;
INSERT INTO CUSTOMERS VALUES (1, 'JOHN', 'JOHN@GMAIL.COM', 'Y');
INSERT INTO CUSTOMERS VALUES (2, 'MARY', 'MARY@GMAIL.COM', 'N');
INSERT INTO CUSTOMERS VALUES (3, 'ERIC', 'ERIC@GMAIL.COM', 'Y');

DELETE FROM ORDERS;
INSERT INTO ORDERS VALUES (1, 100.23, 1);
INSERT INTO ORDERS VALUES (2, 2000, 1);
INSERT INTO ORDERS VALUES (3, 1550, 2);
INSERT INTO ORDERS VALUES (4, 120, 2);
INSERT INTO ORDERS VALUES (5, 550, 2);

-- ONE TO MANY (ONE ORDER MAY HAVE MANY ITEMS)
DELETE FROM ITEMS;
INSERT INTO ITEMS VALUES (1, 100.23, 'APPLE', 1);
INSERT INTO ITEMS VALUES (2, 1500, 'IPHONE', 2);
INSERT INTO ITEMS VALUES (3, 500, 'IPAD', 2);
INSERT INTO ITEMS VALUES (4, 1500, 'ORANGE', 3);
INSERT INTO ITEMS VALUES (5, 120, 'LEMON', 4);
INSERT INTO ITEMS VALUES (6, 550, 'BOOK', 5);
INSERT INTO ITEMS VALUES (7, 550, 'BOTTLE', 5);

SELECT * FROM CUSTOMERS;
SELECT * FROM ORDERS;

-- JOIN TABLE, INNER JOIN
SELECT O.CUSTOMER_ID, 
C.NAME AS CUSTOMER_NAME,
O.ID AS ORDER_ID, 
O.AMOUNT AS ORDER_AMOUNT,
I.DESCRIPTION AS ITEM_DESC,
I.AMOUNT AS ITEM_PRICE
FROM CUSTOMERS C 
INNER JOIN ORDERS O ON C.ID = O.CUSTOMER_ID -- INTERSET BY KEY "ON STATEMENT"
INNER JOIN ITEMS I ON I.ORDER_ID = O.ID
;
-- APPROACH 2: INNER JOIN
SELECT O.CUSTOMER_ID, 
C.NAME AS CUSTOMER_NAME,
O.ID AS ORDER_ID, 
O.AMOUNT AS ORDER_AMOUNT,
I.DESCRIPTION AS ITEM_DESC,
I.AMOUNT AS ITEM_PRICE
FROM CUSTOMERS C, ORDERS O, ITEMS I
WHERE I.ORDER_ID = O.ID
AND O.CUSTOMER_ID =  C.ID;

-- LEFT JOIN
SELECT C.ID, 
C.NAME AS CUSTOMER_NAME,
O.ID AS ORDER_ID, 
O.AMOUNT AS ORDER_AMOUNT
FROM CUSTOMERS C LEFT JOIN ORDERS O ON O.CUSTOMER_ID =  C.ID
;

-- RIGHT JOIN
SELECT C.ID, 
C.NAME AS CUSTOMER_NAME,
O.ID AS ORDER_ID, 
O.AMOUNT AS ORDER_AMOUNT
FROM ORDERS O RIGHT JOIN CUSTOMERS C ON O.CUSTOMER_ID =  C.ID
;
